name: Pipeline

on:
  push:
    branches:
      - main
      - dev-production
  pull_request:
    branches:
      - main
      - dev-production

env:
  REGISTRY_IMAGE: ${{ secrets.REGISTRY_URL }}/tekbetter/tekbetter-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'web/package-lock.json'

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'
          cache-dependency-path: 'requirements.txt'

      - name: Install Cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@main

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64/v8

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=raw,value=development,enable=${{ github.ref == 'refs/heads/dev-production' }}
            type=sha,format=short
            type=ref,event=branch
            type=ref,event=pr

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64/v8
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ env.REGISTRY_IMAGE }}:${{ env.VERSION || 'latest' }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ env.VERSION || 'latest' }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            BUILDTIME=${{ steps.meta.outputs.labels['org.opencontainers.image.created'] }}
            VERSION=${{ steps.meta.outputs.labels['org.opencontainers.image.version'] || 'latest' }}

#      - name: Sign Docker images
#        if: github.event_name != 'pull_request'
#        env:
#          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
#        run: |
#          cosign sign --key env://COSIGN_KEY ${{ env.REGISTRY_IMAGE }}:${{ env.VERSION }}
#          shell: bash
#          env:
#          COSIGN_KEY: ${{secrets.COSIGN_KEY}}
#          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Logout from Docker Hub
        if: github.event_name != 'pull_request'
        run: docker logout ${{ secrets.REGISTRY_URL }}